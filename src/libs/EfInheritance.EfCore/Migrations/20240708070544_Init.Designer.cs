// <auto-generated />
using EfInheritance.EfCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EfInheritance.EfCore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240708070544_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EfInheritance.Domain.Gadget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Gadget_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gadget", (string)null);

                    b.HasDiscriminator<string>("Gadget_Type").HasValue("Gadget");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("EfInheritance.Domain.SmartPhone", b =>
                {
                    b.HasBaseType("EfInheritance.Domain.Gadget");

                    b.Property<int>("CameraSize")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Color");

                    b.Property<int>("FrontCameraSize")
                        .HasColumnType("int");

                    b.ToTable("Gadget", (string)null);

                    b.HasDiscriminator().HasValue("SmartPhone");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Manufacturer = "Apple",
                            Name = "IPhone 14 pro max",
                            CameraSize = 20,
                            Color = "Rose Gold",
                            FrontCameraSize = 12
                        },
                        new
                        {
                            Id = 2,
                            Manufacturer = "SamSung",
                            Name = "Galaxy Note3",
                            CameraSize = 15,
                            Color = "metallic black",
                            FrontCameraSize = 7
                        });
                });

            modelBuilder.Entity("EfInheritance.Domain.SmartWatch", b =>
                {
                    b.HasBaseType("EfInheritance.Domain.Gadget");

                    b.Property<string>("BandColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CameraSize")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Color");

                    b.Property<bool>("HeartBeatSensor")
                        .HasColumnType("bit");

                    b.ToTable("Gadget", null, t =>
                        {
                            t.Property("CameraSize")
                                .HasColumnName("SmartWatch_CameraSize");
                        });

                    b.HasDiscriminator().HasValue("SmartWatch");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Manufacturer = "Apple",
                            Name = "Iwatch 13",
                            BandColor = "Silver",
                            CameraSize = 15,
                            Color = "Silver",
                            HeartBeatSensor = true
                        },
                        new
                        {
                            Id = 4,
                            Manufacturer = "SamSung",
                            Name = "Galaxy Gear 3",
                            BandColor = "balck",
                            CameraSize = 15,
                            Color = "Gold",
                            HeartBeatSensor = false
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
