// <auto-generated />
using System;
using EfInheritance.EfCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EfInheritance.EfCore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EfInheritance.Domain.Policy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CoveringAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EffectionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Policy", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("EfInheritance.Domain.Endorsement", b =>
                {
                    b.HasBaseType("EfInheritance.Domain.Policy");

                    b.Property<decimal>("EndorsementCoveringAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EndorsementEffectionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndorsementEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndorsementRegsterDate")
                        .HasColumnType("datetime2");

                    b.ToTable("Endorsement", (string)null);
                });

            modelBuilder.Entity("EfInheritance.Domain.Endorsement", b =>
                {
                    b.HasOne("EfInheritance.Domain.Policy", null)
                        .WithOne()
                        .HasForeignKey("EfInheritance.Domain.Endorsement", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
